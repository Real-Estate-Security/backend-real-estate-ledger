// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: listings.sql

package database

import (
	"context"
	"database/sql"
)

const getListingByPropertyID = `-- name: GetListingByPropertyID :one
SELECT id, property_id, agent_id, price, listing_status, listing_date, description, accepted_bid_id FROM listings
WHERE property_id = $1
`

func (q *Queries) GetListingByPropertyID(ctx context.Context, propertyID int64) (Listings, error) {
	row := q.db.QueryRowContext(ctx, getListingByPropertyID, propertyID)
	var i Listings
	err := row.Scan(
		&i.ID,
		&i.PropertyID,
		&i.AgentID,
		&i.Price,
		&i.ListingStatus,
		&i.ListingDate,
		&i.Description,
		&i.AcceptedBidID,
	)
	return i, err
}

const updateAcceptedBidIdByListingId = `-- name: UpdateAcceptedBidIdByListingId :exec
UPDATE listings 
SET 
    accepted_bid_id = $1
WHERE id = $2
`

type UpdateAcceptedBidIdByListingIdParams struct {
	AcceptedBidID sql.NullInt64 `json:"accepted_bid_id"`
	ID            int64         `json:"id"`
}

func (q *Queries) UpdateAcceptedBidIdByListingId(ctx context.Context, arg UpdateAcceptedBidIdByListingIdParams) error {
	_, err := q.db.ExecContext(ctx, updateAcceptedBidIdByListingId, arg.AcceptedBidID, arg.ID)
	return err
}
